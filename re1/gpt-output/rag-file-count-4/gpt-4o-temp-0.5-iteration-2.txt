1. What is the volume of empirical work performed over the lifetime of ICSE?
2. How has the quantity of empirical evaluations changed over 29 years of ICSE proceedings?
3. What is the soundness of empirical evaluations performed in ICSE proceedings over the years?
4. Which study parameters are essential for defining an empirical evaluation as sound?
5. What types of empirical studies are predominant in software engineering research?
6. Are the hypotheses clearly stated in empirical research studies in ICSE?
7. How often are empirical studies in ICSE replicated?
8. What is the prevalence of positive versus negative results in ICSE empirical studies?
9. How do the scales of measurement and methods of analysis impact the soundness of empirical evaluations?
10. How are the study type, sampling type, and target population defined in ICSE publications?
11. What are the trends in the use of professionals versus students as subjects in empirical studies?
12. What are the common threats to validity identified in ICSE empirical evaluations?
13. What improvements are needed in empirical evaluation criteria for software engineering?
14. How frequently do ICSE papers include discussions on experimental design and validity threats?
15. What distinction exists between evaluations carried out by the theory inventor and independent evaluations in ICSE studies?
16. How do ICSE empirical studies handle hypothesis formulation and testing?
17. What is the extent of reflection on empirical software engineering practices observed in ICSE studies?
18. How are data analysis techniques utilized in empirical evaluations in ICSE?
19. What are critical gaps identified in the coverage of software engineering topics in empirical research?
20. How do empirical evaluations in ICSE address real-world versus laboratory settings?
21. What is the balance between industrial data and student data usage in ICSE empirical studies?
22. How are vested interests and biases minimized in empirical research presented in ICSE proceedings?
23. What role do standard metrics and measurement practices play in the evaluation of empirical research in software engineering?
24. What categories of software engineering topics are frequently addressed in empirical studies?
25. Which empirical methods are predominantly used in software engineering research?
26. What are the common sources of data in empirical software engineering studies?
27. How does the classification of empirical research methods illuminate the state of empirical research in ICSE?
28. What is the role of meta-analysis in improving the quality of empirical software engineering research?
29. How frequently do empirical studies in ICSE cite other scientific disciplines?
30. What percentage of empirical studies in software engineering involve real-world computer systems?
31. What are the prevalent research approaches observed in empirical software engineering literature?
32. How often do empirical software engineering papers feature hypothesis testing?
33. What proportion of empirical studies focuses on individual practitioners versus teams?
34. What is the importance of field studies in bridging the gap between empirical software engineering research and practice?
35. How do empirical software engineering studies influence the practice of software engineering?
36. What are the most common research topics in empirical software engineering studies?
37. How is the evaluative deductive approach applied in empirical software engineering research?
38. What are the major findings of the most recent evaluations of empirical software engineering journals like Empirical Software Engineering?
39. To what extent do empirical software engineering studies refer to research in other disciplines?
40. How do empirical studies address the technical versus organizational aspects of software engineering?
41. What role do laboratory experiments play in empirical software engineering research?
42. How does the skew in the use of student subjects impact the validity of empirical software engineering studies?
43. What improvements are suggested for enhancing empirical study design in the field of software engineering?
44. What are the best practices for employing case studies in empirical software engineering research?
45. How are correlational studies used in empirical software engineering?
46. What is the significance of cross-disciplinary references in empirical software engineering research?
47. What factors contribute to the lack of improvement in the soundness of empirical evaluations in software engineering?
48. Which empirical research methods are considered underutilized in software engineering studies?
49. What are the key differences between positivist and interpretivist research in empirical software engineering?
50. How can meta-analysis contribute to building a body of knowledge in software engineering?
51. What are the typical units of analysis in empirical software engineering research?
52. How do empirical software engineering studies address software maintenance and code review?
53. What gaps exist in the empirical research coverage of software design and architecture?
54. How is the effectiveness of empirical software engineering methods evaluated?
55. What are common methodological weaknesses identified in empirical software engineering studies?
56. How has the empirical evaluation of software engineering changed over decades?
57. What role do descriptive and exploratory surveys play in the field of empirical software engineering?
58. How are implementation details addressed in empirical software engineering studies?
59. What are the recent trends in the topics of empirical software engineering research?
60. How valid are the claim and hypotheses made in the reviewed empirical software engineering papers?
61. What is the importance of specifying the population to which an empirical study applies?
62. How does the experimenter's bias impact the results of empirical software engineering studies?
63. How can we improve the generalizability of empirical software engineering research?
64. What are the challenges and benefits of conducting long-term empirical studies in software engineering?
65. What is the role of hypothesis-driven research in empirical software engineering?
66. How important is replication of empirical studies in building a comprehensive body of knowledge?
67. What are the obstacles to performing empirical evaluations in real-world settings?
68. How are empirical research findings typically presented and interpreted in software engineering?
69. What is the role of observational and naturalistic studies in empirical software research?
70. How do empirical software engineering studies address the scalability of software methods?
71. What metrics and measurement practices are most commonly scrutinized in empirical software engineering research?
72. How are interactive and social aspects of software engineering evaluated empirically?
73. What are the implications of using artificial data versus real-world data in empirical studies?
74. To what extent do empirical software engineering studies contribute to theory building?
75. How often do empirical studies in software engineering result in practical guidelines or standards?
76. What are the pros and cons of using students as subjects in empirical software engineering research?
77. How do text and data mining tools aid in conducting meta-analysis for empirical software engineering?