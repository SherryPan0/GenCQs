1. What is the quantity of empirical evaluations performed over the lifetime of ICSE?
2. Has the soundness of empirical evaluations in ICSE papers improved over 29 years?
3. What criteria define the soundness of an empirical evaluation within ICSE proceedings?
4. What are the prevalent topics covered in empirical software engineering research?
5. How many studies of empirical software engineering are based on industry data versus student data?
6. What is the percentage of replicated studies in empirical software engineering research?
7. What types of hypotheses are commonly seen in empirical software engineering studies?
8. In what way does hypothesis formulation impact the perceived soundness of a study?
9. How often do empirical studies in ICSE lack clear hypotheses and hypotheses testing?
10. What is the significance level commonly selected for empirical evaluations in ICSE proceedings?
11. How representative are the empirical studies published in ICSE of the general software engineering community?
12. What are the prevalent research methods employed in empirical software engineering?
13. What is the prevalence of controlled experiments in empirical software engineering?
14. What types of data analysis methods are typically used in empirical software engineering research?
15. How is the quality of empirical evidence assessed in software engineering?
16. What are the common threats to validity in empirical software engineering experiments?
17. How is the population for empirical software engineering experiments identified?
18. What is the balance between studies using industrial data versus student data?
19. How do vested interests and bias affect empirical evaluations in software engineering?
20. What kind of legal analysis techniques are used in empirical software engineering studies?
21. What topics are underrepresented in empirical software engineering research?
22. How do case studies contribute to the body of knowledge in empirical software engineering?
23. What is the role of meta-analysis in empirical software engineering?
24. How often do reviews and inspections feature in empirical software engineering studies?
25. What is the impact of preliminary guidelines on empirical research in software engineering?
26. What are the characteristics of the empirical methods that are commonly used?
27. How do empirical studies in software engineering address the research context and experimental design?
28. What role do threats to validity play in the assessment of empirical evaluations?
29. How are the characteristics of the target population defined in empirical software engineering?
30. Which areas of software engineering lack empirical evaluations?
31. How do empirical software engineering studies address the replicability of results?
32. How often are negative results reported in empirical software engineering research?
33. What improvements are needed in the soundness of empirical software evaluations?
34. How does the type of study (e.g., case study, experiment) impact the findings in empirical software engineering?
35. What recommendations exist for improving empirical evaluations in software engineering?
36. How do empirical software engineering studies define measures of success?
37. What is the role of hypothesis testing in empirical software engineering research?
38. How are empirical software engineering studies classified according to their research approach?
39. What contextual factors influence the design of empirical software engineering studies?
40. How do empirical studies in software engineering address real-world applicability?
41. What are the common statistical techniques used in empirical software engineering research?
42. How do empirical software engineering studies handle data collection and analysis?
43. What are the main challenges in conducting empirical software engineering research?
44. How has the integration of empirical studies evolved over the years in software engineering conferences?
45. How do empirical studies contribute to theory revision in software engineering?
46. What is the role of literature reviews in empirical software engineering research?
47. How often do empirical software engineering studies receive funding from industry versus academia?
48. What kinds of biases are common in empirical software engineering evaluations?
49. How are empirical software engineering studies peer-reviewed and validated?
50. What is the impact of empirical research on software engineering practice?
51. How do empirical software engineering studies define their experimental protocols?
52. What methodologies are used to enhance the generalizability of empirical findings in software engineering?
53. What are the recurring themes in empirical software engineering research over the years?
54. How do empirical software engineering studies investigate the development lifecycle?
55. What are the prevalent types of evidence used in empirical software engineering?
56. How are hypotheses formulated and tested in empirical software engineering studies?
57. How do empirical software engineering studies report and interpret their findings?
58. What frameworks are used to guide empirical software engineering research?
59. How are empirical results in software engineering synthesized and presented?
60. What are the primary goals of empirical evaluations in software engineering?
61. How do empirical software engineering studies address the replication crisis?
62. What common pitfalls do empirical software engineering studies encounter?
63. How do empirical software engineering studies ensure the validity of their results?
64. What are the characteristics of a well-designed empirical software engineering study?
65. How do empirical software engineering studies classify their research methods?
66. What advances have been made in empirical software engineering methodologies?
67. How are empirical software engineering studies adapted for different research contexts?
68. What role do practitioners play in conducting empirical software engineering research?
69. How do empirical software engineering studies measure the impact of interventions?
70. What are the common data sources for empirical software engineering research?
71. How do empirical studies contribute to the understanding of software engineering practices?
72. What guidelines exist for reporting empirical findings in software engineering?
73. How do empirical software engineering studies differentiate between types of studies?
74. How do empirical software engineering studies identify and mitigate biases?
75. What are the key metrics used in empirical software engineering research?
76. How do empirical software engineering studies address the scalability of their findings?
77. How do empirical evaluations in software engineering improve over time?